generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Address {
  id        String   @id
  userId    String
  name      String
  phone     String
  line1     String
  line2     String?
  city      String
  state     String
  pincode   String
  country   String   @default("India")
  isDefault Boolean  @default(false)
  latitude  Float?
  longitude Float?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model AdminRefreshToken {
  id        String   @id
  token     String   @unique
  adminId   String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Cart {
  id        String   @id
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model CartItem {
  id        String   @id
  cartId    String
  productId String
  quantity  Int      @default(1)
  size      String
  color     String?
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model ColorInventory {
  id          String   @id
  productId   String
  color       String
  inventory   Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  colorCode   String   @default("")
  stockNumber String?

  @@unique([productId, color])
}

model OTP {
  id          String   @id
  phoneNumber String
  otpCode     String
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  verified    Boolean  @default(false)

  @@index([phoneNumber])
}

model Order {
  id                String        @id
  orderNumber       String        @unique
  userId            String
  totalAmount       Float
  status            OrderStatus   @default(PENDING)
  paymentStatus     PaymentStatus @default(PENDING)
  paymentMethod     PaymentMethod @default(COD)
  addressId         String?
  discount          Float         @default(0)
  shippingFee       Float         @default(0)
  tax               Float         @default(0)
  notes             String?
  deliveryNotes     String?
  estimatedDelivery DateTime?
  trackingNumber    String?
  deliveredAt       DateTime?
  cancelledAt       DateTime?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime
}

model OrderItem {
  id          String   @id
  orderId     String
  productId   String
  productName String
  sellerId    String
  quantity    Int
  size        String
  color       String?
  price       Float
  discount    Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model PaymentTransaction {
  id                String        @id
  userId            String
  orderId           String?
  amount            Float
  currency          String        @default("INR")
  status            PaymentStatus
  paymentMethod     PaymentMethod
  transactionId     String?       @unique
  gatewayResponse   Json?
  paymentLink       String?
  paymentLinkExpiry DateTime?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime
}

model Product {
  id             String   @id
  name           String
  description    String?
  mrpPrice       Float
  sellingPrice   Float
  images         String[] @default([])
  category       String?
  subcategory    String?
  sizeQuantities Json
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  sellerId       String
  variantGroupId String?
  isReturnable   Boolean  @default(true)

  @@index([isActive, sellerId], map: "idx_product_active_seller")
}

model ProductVariantGroup {
  id           String   @id
  name         String
  description  String?
  category     String?
  subcategory  String?
  basePrice    Float
  sellingPrice Float
  sellerId     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime
}

model RefreshToken {
  id        String   @id
  token     String   @unique
  sellerId  String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
  @@index([token])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Seller {
  id              String   @id
  phone           String   @unique
  password        String?
  shopName        String?
  ownerName       String?
  address         String?
  city            String?
  state           String?
  pincode         String?
  openTime        String?
  closeTime       String?
  categories      String[] @default([])
  createdAt       DateTime @default(now())
  updatedAt       DateTime
  latitude        Float?
  longitude       Float?
  isPhoneVerified Boolean  @default(false)
  gstNumber       String?
  isVisible       Boolean  @default(true)
  manuallyHidden  Boolean  @default(false)

  @@index([manuallyHidden], map: "idx_seller_manually_hidden")
  @@index([isVisible], map: "idx_seller_visibility")
}

model SuperAdmin {
  id        String   @id
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model User {
  id                 String    @id
  email              String?   @unique
  phone              String?   @unique
  password           String
  name               String?
  profilePicture     String?
  isVerified         Boolean   @default(false)
  verificationToken  String?
  passwordResetToken String?
  resetTokenExpiry   DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime
  isPhoneVerified    Boolean   @default(false)
  lastLoginAt        DateTime?
  role               UserRole  @default(USER)
  tokenVersion       Int       @default(0)
}

model UserRefreshToken {
  id        String   @id
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model WhatsAppOTP {
  id          String   @id
  phoneNumber String
  otpCode     String
  verified    Boolean  @default(false)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  name        String?
  email       String?
  isNewUser   Boolean? @default(false)

  @@index([phoneNumber, expiresAt])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED
}

enum PaymentMethod {
  COD
  CREDIT_CARD
  DEBIT_CARD
  UPI
  WALLET
  NET_BANKING
}

enum PaymentStatus {
  PENDING
  SUCCESSFUL
  FAILED
  REFUNDED
}

enum ProductCategory {
  MEN
  WOMEN
  KIDS
}

enum UserRole {
  USER
  ADMIN
  MODERATOR
}
