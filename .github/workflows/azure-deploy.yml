name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma Client
      run: |
        npx prisma generate
        # Ensure the Prisma engine is copied
        mkdir -p node_modules/.prisma/client
        cp -r node_modules/@prisma/client/libquery_engine* node_modules/.prisma/client/
        
    - name: Build app
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Prepare package
      run: |
        # Include only production files
        mkdir -p deploy
        cp -r .next deploy/
        cp -r public deploy/
        cp -r node_modules/.prisma deploy/.prisma
        cp -r prisma deploy/prisma
        cp package.json deploy/
        cp next.config.mjs deploy/
        cp -r node_modules/@prisma deploy/node_modules/@prisma
        
        # Create simplified server.js file
        cat > deploy/server.js << EOF
        const { createServer } = require('http');
        const { parse } = require('url');
        const next = require('next');
        
        const dev = false;
        const hostname = '0.0.0.0';
        const port = process.env.PORT || 3000;
        
        const app = next({ dev, hostname, port, dir: __dirname });
        const handle = app.getRequestHandler();
        
        app.prepare().then(() => {
          createServer((req, res) => {
            const parsedUrl = parse(req.url, true);
            handle(req, res, parsedUrl);
          }).listen(port, (err) => {
            if (err) throw err;
            console.log(\`> Ready on http://\${hostname}:\${port}\`);
          });
        });
        EOF
        
        # Create web.config for Azure
        cat > deploy/web.config << EOF
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
            </handlers>
            <rewrite>
              <rules>
                <rule name="DynamicContent">
                  <match url="/*" />
                  <action type="Rewrite" url="server.js" />
                </rule>
              </rules>
            </rewrite>
            <security>
              <requestFiltering removeServerHeader="true" />
            </security>
          </system.webServer>
        </configuration>
        EOF
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: deploy 